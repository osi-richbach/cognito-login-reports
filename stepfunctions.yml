---
AWSTemplateFormatVersion: '2010-09-09'
Description: The AWS CloudFormation template for this Serverless application
Resources:
  ServerlessDeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
  ApiInitiateLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/lambda/cognito-ab-deployment-ApiInitiate"
  CronInitiateLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/lambda/cognito-ab-deployment-CronInitiate"
  FindUsersLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/lambda/cognito-ab-deployment-FindUsers"
  FindUsersDlqLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/lambda/cognito-ab-deployment-FindUsersDlq"
  ConfirmedUsersLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/lambda/cognito-ab-deployment-ConfirmedUsers"
  NonConfirmedUsersLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/lambda/cognito-ab-deployment-NonConfirmedUsers"
  NoRecentLoginReportLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/lambda/cognito-ab-deployment-NoRecentLoginReport"
  LastWeekLoginsReportLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/lambda/cognito-ab-deployment-LastWeekLoginsReport"
  FailedLoginsReportLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/lambda/cognito-ab-deployment-FailedLoginsReport"
  IamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Join:
          - "-"
          - - ab-deployment
            - cognito
            - lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-ApiInitiate:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-CronInitiate:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-FindUsers:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-FindUsersDlq:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-ConfirmedUsers:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-NonConfirmedUsers:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-NoRecentLoginReport:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-LastWeekLoginsReport:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-FailedLoginsReport:*
          - Effect: Allow
            Action:
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-ApiInitiate:*:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-CronInitiate:*:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-FindUsers:*:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-FindUsersDlq:*:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-ConfirmedUsers:*:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-NonConfirmedUsers:*:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-NoRecentLoginReport:*:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-LastWeekLoginsReport:*:*
            - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-FailedLoginsReport:*:*
          - Effect: Allow
            Action:
            - cognito-idp:ListUsers
            Resource:
              Fn::Join:
              - ''
              - - 'arn:aws:cognito-idp:'
                - us-west-2
                - ":"
                - Ref: AWS::AccountId
                - ":userpool/"
                - us-west-2_FCgAM8Jlo
      Path: "/"
      RoleName:
        Fn::Join:
        - "-"
        - - cognito
          - ab-deployment
          - us-west-2
          - lambdaRole
  ApiInitiateLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: ServerlessDeploymentBucket
        S3Key: serverless/cognito/ab-deployment/1572096563587-2019-10-26T13:29:23.587Z/cognito.zip
      FunctionName: cognito-ab-deployment-ApiInitiate
      Handler: src/lambda/api/initiateLoginReport.handler
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - ApiInitiateIamRoleLambdaExecution
        - Arn
      Runtime: nodejs10.x
      Timeout: 6
      Environment:
        Variables:
          REGION: us-west-2
          USER_POOL_ID: us-west-2_FCgAM8Jlo
          STATE_MACHINE_ARN:
            Fn::Sub: arn:aws:states:us-west-2:${AWS::AccountId}:stateMachine:cognito-login-report-ab-deployment
    DependsOn:
    - ApiInitiateIamRoleLambdaExecution
    - ApiInitiateLogGroup
  ApiInitiateLambdaVersionS7qgQ9flqd63hFazjhHASx5WNnJ05y18bdAz8r9uc:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: ApiInitiateLambdaFunction
      CodeSha256: KKD7NtYNxY+Pkf0xbomgHWlt36nhknzRDYzpEAZ317w=
  CronInitiateLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: ServerlessDeploymentBucket
        S3Key: serverless/cognito/ab-deployment/1572096563587-2019-10-26T13:29:23.587Z/cognito.zip
      FunctionName: cognito-ab-deployment-CronInitiate
      Handler: src/lambda/tools/initiateLoginReport.handler
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - CronInitiateIamRoleLambdaExecution
        - Arn
      Runtime: nodejs10.x
      Timeout: 6
      Environment:
        Variables:
          REGION: us-west-2
          USER_POOL_ID: us-west-2_FCgAM8Jlo
          STATE_MACHINE_ARN:
            Fn::Sub: arn:aws:states:us-west-2:${AWS::AccountId}:stateMachine:cognito-login-report-ab-deployment
    DependsOn:
    - CronInitiateIamRoleLambdaExecution
    - CronInitiateLogGroup
  CronInitiateLambdaVersionDIxpdb07Y05xzI0PYwg9TOYYaXAZubHxJMvizCXf10:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: CronInitiateLambdaFunction
      CodeSha256: KKD7NtYNxY+Pkf0xbomgHWlt36nhknzRDYzpEAZ317w=
  FindUsersLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: ServerlessDeploymentBucket
        S3Key: serverless/cognito/ab-deployment/1572096563587-2019-10-26T13:29:23.587Z/cognito.zip
      FunctionName: cognito-ab-deployment-FindUsers
      Handler: src/lambda/tools/find_users.handler
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - FindUsersIamRoleLambdaExecution
        - Arn
      Runtime: nodejs10.x
      Timeout: 6
      Environment:
        Variables:
          REGION: us-west-2
          USER_POOL_ID: us-west-2_FCgAM8Jlo
          LIST_NON_CONFIRMED_USERS: true
          CONFIRMED_USER_TOPIC_ARN:
            Fn::Sub: arn:aws:sns:us-west-2:${AWS::AccountId}:cognito-ab-deployment-confirmedUser
          NON_CONFIRMED_USER_TOPIC_ARN:
            Fn::Sub: arn:aws:sns:us-west-2:${AWS::AccountId}:cognito-ab-deployment-nonConfirmedUser
          FIND_USERS_DLQ_TOPIC_ARN:
            Fn::Sub: arn:aws:sns:us-west-2:${AWS::AccountId}:cognito-ab-deployment-findUsersDlq
    DependsOn:
    - FindUsersIamRoleLambdaExecution
    - FindUsersLogGroup
  FindUsersLambdaVersionGx4W2KexotR7jOPI2Yr3hCrSHcqsXDGb9KsLZtuoOg:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: FindUsersLambdaFunction
      CodeSha256: KKD7NtYNxY+Pkf0xbomgHWlt36nhknzRDYzpEAZ317w=
  FindUsersDlqLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: ServerlessDeploymentBucket
        S3Key: serverless/cognito/ab-deployment/1572096563587-2019-10-26T13:29:23.587Z/cognito.zip
      FunctionName: cognito-ab-deployment-FindUsersDlq
      Handler: src/lambda/tools/find_users_dlq.handler
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - IamRoleLambdaExecution
        - Arn
      Runtime: nodejs10.x
      Timeout: 6
      Environment:
        Variables:
          REGION: us-west-2
          USER_POOL_ID: us-west-2_FCgAM8Jlo
    DependsOn:
    - FindUsersDlqLogGroup
    - IamRoleLambdaExecution
  FindUsersDlqLambdaVersion38kspdaOHtgafBS0XuuJLSexcjOtQUmgOkr7b8hPAqA:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: FindUsersDlqLambdaFunction
      CodeSha256: KKD7NtYNxY+Pkf0xbomgHWlt36nhknzRDYzpEAZ317w=
  ConfirmedUsersLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: ServerlessDeploymentBucket
        S3Key: serverless/cognito/ab-deployment/1572096563587-2019-10-26T13:29:23.587Z/cognito.zip
      FunctionName: cognito-ab-deployment-ConfirmedUsers
      Handler: src/lambda/tools/process_confirmed_user.handler
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - ConfirmedUsersIamRoleLambdaExecution
        - Arn
      Runtime: nodejs10.x
      Timeout: 900
      Environment:
        Variables:
          REGION: us-west-2
          USER_POOL_ID: us-west-2_FCgAM8Jlo
          NON_CONFIRMED_USERS_TABLE_NAME: cognito-ab-deployment-nonConfirmedUsers
          LOGIN_REPORT_TABLE_NAME: cognito-ab-deployment-loginReport
          FIND_USERS_DLQ_TOPIC_ARN:
            Fn::Sub: arn:aws:sns:us-west-2:${AWS::AccountId}:cognito-ab-deployment-findUsersDlq
    DependsOn:
    - ConfirmedUsersIamRoleLambdaExecution
    - ConfirmedUsersLogGroup
  ConfirmedUsersLambdaVersionj7yskOnN8vbb1dH0DYuaCRh6PMxhiV5hPv6mScMfs:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: ConfirmedUsersLambdaFunction
      CodeSha256: KKD7NtYNxY+Pkf0xbomgHWlt36nhknzRDYzpEAZ317w=
  NonConfirmedUsersLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: ServerlessDeploymentBucket
        S3Key: serverless/cognito/ab-deployment/1572096563587-2019-10-26T13:29:23.587Z/cognito.zip
      FunctionName: cognito-ab-deployment-NonConfirmedUsers
      Handler: src/lambda/tools/process_non_confirmed_user.handler
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - NonConfirmedUsersIamRoleLambdaExecution
        - Arn
      Runtime: nodejs10.x
      Timeout: 6
      Environment:
        Variables:
          REGION: us-west-2
          USER_POOL_ID: us-west-2_FCgAM8Jlo
          TABLE_NAME: cognito-ab-deployment-nonConfirmedUsers
          FIND_USERS_DLQ_TOPIC_ARN:
            Fn::Sub: arn:aws:sns:us-west-2:${AWS::AccountId}:cognito-ab-deployment-findUsersDlq
    DependsOn:
    - NonConfirmedUsersIamRoleLambdaExecution
    - NonConfirmedUsersLogGroup
  NonConfirmedUsersLambdaVersion3lCWSVf9DUG4MhWg8cl3w1FSzrrwMT1FTKkWHrujr5I:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: NonConfirmedUsersLambdaFunction
      CodeSha256: KKD7NtYNxY+Pkf0xbomgHWlt36nhknzRDYzpEAZ317w=
  NoRecentLoginReportLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: ServerlessDeploymentBucket
        S3Key: serverless/cognito/ab-deployment/1572096563587-2019-10-26T13:29:23.587Z/cognito.zip
      FunctionName: cognito-ab-deployment-NoRecentLoginReport
      Handler: src/lambda/tools/no_recent_login_report.handler
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - NoRecentLoginReportIamRoleLambdaExecution
        - Arn
      Runtime: nodejs10.x
      Timeout: 6
      Environment:
        Variables:
          REGION: us-west-2
          USER_POOL_ID: us-west-2_FCgAM8Jlo
          NON_CONFIRMED_USERS_TABLE_NAME: cognito-ab-deployment-nonConfirmedUsers
          CONFIRMED_USERS_TABLE_NAME: cognito-ab-deployment-loginReport
          ALLOWED_DAYS_WITHOUT_LOGIN: 30
    DependsOn:
    - NoRecentLoginReportIamRoleLambdaExecution
    - NoRecentLoginReportLogGroup
  NoRecentLoginReportLambdaVersionziYHHDbuYlBnvRskFvbLWvHOTbi5JvLF56puIuVuk4:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: NoRecentLoginReportLambdaFunction
      CodeSha256: KKD7NtYNxY+Pkf0xbomgHWlt36nhknzRDYzpEAZ317w=
  LastWeekLoginsReportLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: ServerlessDeploymentBucket
        S3Key: serverless/cognito/ab-deployment/1572096563587-2019-10-26T13:29:23.587Z/cognito.zip
      FunctionName: cognito-ab-deployment-LastWeekLoginsReport
      Handler: src/lambda/tools/last_week_logins_report.handler
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - LastWeekLoginsReportIamRoleLambdaExecution
        - Arn
      Runtime: nodejs10.x
      Timeout: 6
      Environment:
        Variables:
          REGION: us-west-2
          USER_POOL_ID: us-west-2_FCgAM8Jlo
          LOGIN_REPORT_TABLE_NAME: cognito-ab-deployment-loginReport
    DependsOn:
    - LastWeekLoginsReportIamRoleLambdaExecution
    - LastWeekLoginsReportLogGroup
  LastWeekLoginsReportLambdaVersionF7Tx4w790RtE2AgV5CL7l8ihrOIvd4mYVW0ZGaWh4:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: LastWeekLoginsReportLambdaFunction
      CodeSha256: KKD7NtYNxY+Pkf0xbomgHWlt36nhknzRDYzpEAZ317w=
  FailedLoginsReportLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: ServerlessDeploymentBucket
        S3Key: serverless/cognito/ab-deployment/1572096563587-2019-10-26T13:29:23.587Z/cognito.zip
      FunctionName: cognito-ab-deployment-FailedLoginsReport
      Handler: src/lambda/tools/last_week_failed_logins_report.handler
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - FailedLoginsReportIamRoleLambdaExecution
        - Arn
      Runtime: nodejs10.x
      Timeout: 6
      Environment:
        Variables:
          REGION: us-west-2
          USER_POOL_ID: us-west-2_FCgAM8Jlo
          LOGIN_REPORT_TABLE_NAME: cognito-ab-deployment-loginReport
    DependsOn:
    - FailedLoginsReportIamRoleLambdaExecution
    - FailedLoginsReportLogGroup
  FailedLoginsReportLambdaVersionmPuztd1Z2bKfVivVROhQ7MeaMFWIhhPhpgHLiyI:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName:
        Ref: FailedLoginsReportLambdaFunction
      CodeSha256: KKD7NtYNxY+Pkf0xbomgHWlt36nhknzRDYzpEAZ317w=
  IamRoleStateMachineExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: states.us-west-2.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: ab-deployment-us-west-2-cognito-statemachine
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - lambda:InvokeFunction
            Resource:
            - Fn::Sub: arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-FindUsers
            - Fn::Sub:
              - "${functionArn}:*"
              - functionArn:
                  Fn::Sub: arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-FindUsers
            - Fn::Sub: arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-ConfirmedUsers
            - Fn::Sub:
              - "${functionArn}:*"
              - functionArn:
                  Fn::Sub: arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-ConfirmedUsers
            - Fn::Sub: arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-NonConfirmedUsers
            - Fn::Sub:
              - "${functionArn}:*"
              - functionArn:
                  Fn::Sub: arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-NonConfirmedUsers
            - Fn::Sub: arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-FailedLoginsReport
            - Fn::Sub:
              - "${functionArn}:*"
              - functionArn:
                  Fn::Sub: arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-FailedLoginsReport
            - Fn::Sub: arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-LastWeekLoginsReport
            - Fn::Sub:
              - "${functionArn}:*"
              - functionArn:
                  Fn::Sub: arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-LastWeekLoginsReport
            - Fn::Sub: arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-NoRecentLoginReport
            - Fn::Sub:
              - "${functionArn}:*"
              - functionArn:
                  Fn::Sub: arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-NoRecentLoginReport
  CognitoDashloginDashreportDashabDashdeployment:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Sub: |-
          {
            "StartAt": "FindUsers",
            "States": {
              "FindUsers": {
                "Type": "Task",
                "Parameters": {
                  "page_token.$": "$.find_users.next_page_token"
                },
                "Resource": "arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-FindUsers",
                "Next": "ProcessUsers"
              },
              "ProcessUsers": {
                "Type": "Parallel",
                "Next": "CleanupState",
                "Branches": [
                  {
                    "StartAt": "ProcessConfirmedUsers",
                    "States": {
                      "ProcessConfirmedUsers": {
                        "Type": "Task",
                        "Parameters": {
                          "users.$": "$.find_users.confirmed_users"
                        },
                        "ResultPath": "$.confirmed_users_result",
                        "Resource": "arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-ConfirmedUsers",
                        "End": true
                      }
                    }
                  },
                  {
                    "StartAt": "ProcessNonConfirmedUsers",
                    "States": {
                      "ProcessNonConfirmedUsers": {
                        "Type": "Task",
                        "Parameters": {
                          "users.$": "$.find_users.non_confirmed_users"
                        },
                        "ResultPath": "$.non_confirmed_users_result",
                        "Resource": "arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-NonConfirmedUsers",
                        "End": true
                      }
                    }
                  }
                ]
              },
              "CleanupState": {
                "Type": "Pass",
                "OutputPath": "$[0]",
                "Next": "ProcessAnotherPage"
              },
              "ProcessAnotherPage": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Not": {
                      "Variable": "$.find_users.next_page_token",
                      "StringEquals": "NONE"
                    },
                    "Next": "FindUsers"
                  }
                ],
                "Default": "DataGatheringComplete"
              },
              "DataGatheringComplete": {
                "Type": "Pass",
                "Next": "FailedLoginsReport"
              },
              "FailedLoginsReport": {
                "Type": "Task",
                "Resource": "arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-FailedLoginsReport",
                "Parameters": {
                  "job_id": "placeholder"
                },
                "Next": "SuccessfulLoginsReport"
              },
              "SuccessfulLoginsReport": {
                "Type": "Task",
                "Resource": "arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-LastWeekLoginsReport",
                "Parameters": {
                  "job_id": "placeholder"
                },
                "Next": "NoRecentLoginReport"
              },
              "NoRecentLoginReport": {
                "Type": "Task",
                "Resource": "arn:aws:lambda:us-west-2:${AWS::AccountId}:function:cognito-ab-deployment-NoRecentLoginReport",
                "Parameters": {
                  "job_id": "placeholder"
                },
                "Next": "ReportsComplete"
              },
              "ReportsComplete": {
                "Type": "Pass",
                "End": true
              }
            }
          }
      RoleArn:
        Fn::GetAtt:
        - IamRoleStateMachineExecution
        - Arn
      Tags: []
      StateMachineName: cognito-login-report-ab-deployment
    DependsOn:
    - IamRoleStateMachineExecution
  CronInitiateEventsRuleSchedule1:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(0 8 ? * * *)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - CronInitiateLambdaFunction
          - Arn
        Id: CronInitiateSchedule
  CronInitiateLambdaPermissionEventsRuleSchedule1:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - CronInitiateLambdaFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal:
        Fn::Join:
        - ''
        - - events.
          - Ref: AWS::URLSuffix
      SourceArn:
        Fn::GetAtt:
        - CronInitiateEventsRuleSchedule1
        - Arn
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ab-deployment-cognito
      EndpointConfiguration:
        Types:
        - EDGE
  ApiGatewayResourceReports:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
        - ApiGatewayRestApi
        - RootResourceId
      PathPart: reports
      RestApiId:
        Ref: ApiGatewayRestApi
  ApiGatewayResourceReportsLogin:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: ApiGatewayResourceReports
      PathPart: login
      RestApiId:
        Ref: ApiGatewayRestApi
  ApiGatewayMethodReportsLoginPost:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      RequestParameters: {}
      ResourceId:
        Ref: ApiGatewayResourceReportsLogin
      RestApiId:
        Ref: ApiGatewayRestApi
      ApiKeyRequired: false
      AuthorizationType: AWS_IAM
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ":apigateway:"
            - Ref: AWS::Region
            - ":lambda:path/2015-03-31/functions/"
            - Fn::GetAtt:
              - ApiInitiateLambdaFunction
              - Arn
            - "/invocations"
      MethodResponses: []
  ApiGatewayDeployment1572096557124:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      StageName: ab-deployment
    DependsOn:
    - ApiGatewayMethodReportsLoginPost
  ApiInitiateLambdaPermissionApiGateway:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - ApiInitiateLambdaFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal:
        Fn::Join:
        - ''
        - - apigateway.
          - Ref: AWS::URLSuffix
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ":execute-api:"
          - Ref: AWS::Region
          - ":"
          - Ref: AWS::AccountId
          - ":"
          - Ref: ApiGatewayRestApi
          - "/*/*"
  SNSTopicCognitoabdeploymentfindUsersDlq:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: cognito-ab-deployment-findUsersDlq
      DisplayName: ''
      Subscription:
      - Endpoint:
          Fn::GetAtt:
          - FindUsersDlqLambdaFunction
          - Arn
        Protocol: lambda
  FindUsersDlqLambdaPermissionCognitoabdeploymentfindUsersDlqSNS:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - FindUsersDlqLambdaFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal:
        Fn::Join:
        - ''
        - - sns.
          - Ref: AWS::URLSuffix
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ":sns:"
          - Ref: AWS::Region
          - ":"
          - Ref: AWS::AccountId
          - ":"
          - cognito-ab-deployment-findUsersDlq
  SNSTopicCognitoabdeploymentconfirmedUser:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: cognito-ab-deployment-confirmedUser
      DisplayName: ''
      Subscription:
      - Endpoint:
          Fn::GetAtt:
          - ConfirmedUsersLambdaFunction
          - Arn
        Protocol: lambda
  ConfirmedUsersLambdaPermissionCognitoabdeploymentconfirmedUserSNS:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - ConfirmedUsersLambdaFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal:
        Fn::Join:
        - ''
        - - sns.
          - Ref: AWS::URLSuffix
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ":sns:"
          - Ref: AWS::Region
          - ":"
          - Ref: AWS::AccountId
          - ":"
          - cognito-ab-deployment-confirmedUser
  SNSTopicCognitoabdeploymentnonConfirmedUser:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: cognito-ab-deployment-nonConfirmedUser
      DisplayName: ''
      Subscription:
      - Endpoint:
          Fn::GetAtt:
          - NonConfirmedUsersLambdaFunction
          - Arn
        Protocol: lambda
  NonConfirmedUsersLambdaPermissionCognitoabdeploymentnonConfirmedUserSNS:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - NonConfirmedUsersLambdaFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal:
        Fn::Join:
        - ''
        - - sns.
          - Ref: AWS::URLSuffix
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ":sns:"
          - Ref: AWS::Region
          - ":"
          - Ref: AWS::AccountId
          - ":"
          - cognito-ab-deployment-nonConfirmedUser
  ApiInitiateIamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Join:
          - "-"
          - - ab-deployment
            - cognito
            - lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-ApiInitiate:*:*
          - Effect: Allow
            Action:
            - states:StartExecution
            Resource:
              Fn::Sub: arn:aws:states:us-west-2:${AWS::AccountId}:stateMachine:cognito-login-report-ab-deployment
      Path: "/"
      RoleName:
        Fn::Join:
        - "-"
        - - cognito
          - ab-deployment
          - ApiInitiate
          - us-west-2
          - lambdaRole
      ManagedPolicyArns: []
  CronInitiateIamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Join:
          - "-"
          - - ab-deployment
            - cognito
            - lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-CronInitiate:*:*
          - Effect: Allow
            Action:
            - states:StartExecution
            Resource:
              Fn::Sub: arn:aws:states:us-west-2:${AWS::AccountId}:stateMachine:cognito-login-report-ab-deployment
      Path: "/"
      RoleName:
        Fn::Join:
        - "-"
        - - cognito
          - ab-deployment
          - CronInitiate
          - us-west-2
          - lambdaRole
      ManagedPolicyArns: []
  FindUsersIamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Join:
          - "-"
          - - ab-deployment
            - cognito
            - lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-FindUsers:*:*
          - Effect: Allow
            Action:
            - cognito-idp:ListUsers
            Resource:
              Fn::Sub: arn:aws:cognito-idp:us-west-2:${AWS::AccountId}:userpool/us-west-2_FCgAM8Jlo
          - Effect: Allow
            Action:
            - sns:Publish
            Resource:
            - Fn::Sub: arn:aws:sns:us-west-2:${AWS::AccountId}:cognito-ab-deployment-confirmedUser
            - Fn::Sub: arn:aws:sns:us-west-2:${AWS::AccountId}:cognito-ab-deployment-nonConfirmedUser
            - Fn::Sub: arn:aws:sns:us-west-2:${AWS::AccountId}:cognito-ab-deployment-findUsersDlq
      Path: "/"
      RoleName:
        Fn::Join:
        - "-"
        - - cognito
          - ab-deployment
          - FindUsers
          - us-west-2
          - lambdaRole
      ManagedPolicyArns: []
  ConfirmedUsersIamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Join:
          - "-"
          - - ab-deployment
            - cognito
            - lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-ConfirmedUsers:*:*
          - Effect: Allow
            Action:
            - dynamodb:BatchWriteItem
            Resource:
            - Fn::Sub: arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/cognito-ab-deployment-loginReport
            - Fn::Sub: arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/cognito-ab-deployment-nonConfirmedUsers
          - Effect: Allow
            Action:
            - cognito-idp:AdminListUserAuthEvents
            Resource:
              Fn::Sub: arn:aws:cognito-idp:us-west-2:${AWS::AccountId}:userpool/us-west-2_FCgAM8Jlo
      Path: "/"
      RoleName:
        Fn::Join:
        - "-"
        - - cognito
          - ab-deployment
          - ConfirmedUsers
          - us-west-2
          - lambdaRole
      ManagedPolicyArns: []
  NonConfirmedUsersIamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Join:
          - "-"
          - - ab-deployment
            - cognito
            - lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-NonConfirmedUsers:*:*
          - Effect: Allow
            Action:
            - dynamodb:BatchWriteItem
            Resource:
              Fn::Sub: arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/cognito-ab-deployment-nonConfirmedUsers
      Path: "/"
      RoleName:
        Fn::Join:
        - "-"
        - - cognito
          - ab-deployment
          - NonConfirmedUsers
          - us-west-2
          - lambdaRole
      ManagedPolicyArns: []
  NoRecentLoginReportIamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Join:
          - "-"
          - - ab-deployment
            - cognito
            - lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-NoRecentLoginReport:*:*
          - Effect: Allow
            Action:
            - dynamodb:Scan
            Resource:
            - Fn::Sub: arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/cognito-ab-deployment-nonConfirmedUsers
            - Fn::Sub: arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/cognito-ab-deployment-loginReport
          - Effect: Allow
            Action:
            - s3:putObject
            - s3:upload
            Resource:
            - arn:aws:s3:::cwds.cognito.userlist/*
      Path: "/"
      RoleName:
        Fn::Join:
        - "-"
        - - cognito
          - ab-deployment
          - NoRecentLoginReport
          - us-west-2
          - lambdaRole
      ManagedPolicyArns: []
  LastWeekLoginsReportIamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Join:
          - "-"
          - - ab-deployment
            - cognito
            - lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-LastWeekLoginsReport:*:*
          - Effect: Allow
            Action:
            - dynamodb:Scan
            Resource:
            - Fn::Sub: arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/cognito-ab-deployment-loginReport
          - Effect: Allow
            Action:
            - s3:putObject
            - s3:upload
            Resource:
            - arn:aws:s3:::cwds.cognito.userlist/*
      Path: "/"
      RoleName:
        Fn::Join:
        - "-"
        - - cognito
          - ab-deployment
          - LastWeekLoginsReport
          - us-west-2
          - lambdaRole
      ManagedPolicyArns: []
  FailedLoginsReportIamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Join:
          - "-"
          - - ab-deployment
            - cognito
            - lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-ab-deployment-FailedLoginsReport:*:*
          - Effect: Allow
            Action:
            - dynamodb:Scan
            Resource:
            - Fn::Sub: arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/cognito-ab-deployment-loginReport
          - Effect: Allow
            Action:
            - s3:putObject
            - s3:upload
            Resource:
            - arn:aws:s3:::cwds.cognito.userlist/*
      Path: "/"
      RoleName:
        Fn::Join:
        - "-"
        - - cognito
          - ab-deployment
          - FailedLoginsReport
          - us-west-2
          - lambdaRole
      ManagedPolicyArns: []
  nonConfirmedUsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: username
        AttributeType: S
      KeySchema:
      - AttributeName: username
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      TableName: cognito-ab-deployment-nonConfirmedUsers
  lastWeeksLoginsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: username
        AttributeType: S
      - AttributeName: jobId
        AttributeType: S
      KeySchema:
      - AttributeName: username
        KeyType: HASH
      - AttributeName: jobId
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      TableName: cognito-ab-deployment-loginReport
Outputs:
  ServerlessDeploymentBucketName:
    Value:
      Ref: ServerlessDeploymentBucket
  ApiInitiateLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: ApiInitiateLambdaVersionS7qgQ9flqd63hFazjhHASx5WNnJ05y18bdAz8r9uc
  CronInitiateLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: CronInitiateLambdaVersionDIxpdb07Y05xzI0PYwg9TOYYaXAZubHxJMvizCXf10
  FindUsersLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: FindUsersLambdaVersionGx4W2KexotR7jOPI2Yr3hCrSHcqsXDGb9KsLZtuoOg
  FindUsersDlqLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: FindUsersDlqLambdaVersion38kspdaOHtgafBS0XuuJLSexcjOtQUmgOkr7b8hPAqA
  ConfirmedUsersLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: ConfirmedUsersLambdaVersionj7yskOnN8vbb1dH0DYuaCRh6PMxhiV5hPv6mScMfs
  NonConfirmedUsersLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: NonConfirmedUsersLambdaVersion3lCWSVf9DUG4MhWg8cl3w1FSzrrwMT1FTKkWHrujr5I
  NoRecentLoginReportLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: NoRecentLoginReportLambdaVersionziYHHDbuYlBnvRskFvbLWvHOTbi5JvLF56puIuVuk4
  LastWeekLoginsReportLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: LastWeekLoginsReportLambdaVersionF7Tx4w790RtE2AgV5CL7l8ihrOIvd4mYVW0ZGaWh4
  FailedLoginsReportLambdaFunctionQualifiedArn:
    Description: Current Lambda function version
    Value:
      Ref: FailedLoginsReportLambdaVersionmPuztd1Z2bKfVivVROhQ7MeaMFWIhhPhpgHLiyI
  CognitoDashloginDashreportDashabDashdeploymentArn:
    Description: Current StateMachine Arn
    Value:
      Ref: CognitoDashloginDashreportDashabDashdeployment
  ServiceEndpoint:
    Description: URL of the service endpoint
    Value:
      Fn::Join:
      - ''
      - - https://
        - Ref: ApiGatewayRestApi
        - ".execute-api.us-west-2."
        - Ref: AWS::URLSuffix
        - "/ab-deployment"
